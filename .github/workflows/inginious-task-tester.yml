# This is a basic workflow to help you get started with Actions

name: INGInious tasks tester

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  INGINIOUS: /home/runner/INGInious
  CONTAINERS: /home/runner/containers
  CONFIG_FILE: ${GITHUB_WORKSPACE}/.github/workflows/inginious-task-tester.env
  INGINIOUS_IMAGES: /home/runner/inginious-images.tar

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  submissions_rerun:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Add REPO_NAME in env variables
      - name: Setup repo name as env variable
        run: echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
        
      - name: Load workflow config
        run: |
          cat ${{ env.CONFIG_FILE }} >> $GITHUB_ENV
          echo ${GITHUB_ENV}
            
      # Get INGInious source code
      - name: Cache INGInious install
        id: cache-inginious
        uses: actions/cache@v3
        with:
          path: ${{ env.INGINIOUS }}
          key: ${{ runner.os }}-inginious
      
      - name: Get INGInious
        if: steps.cache-inginious.outputs.cache-hit != 'true'
        run: git clone https://github.com/nrybowski/INGInious ${INGINIOUS}
        
      # Get INGInious containers
      - name: Cache INGInious containers
        id: cache-inginious-containers
        uses: actions/cache@v3
        with:
          path: ${{ env.CONTAINERS }}
          key: ${{ runner.os }}-inginious-containers
        
      - name: Get INGInious containers
        if: steps.cache-inginious-containers.outputs.cache-hit != 'true'
        run: git clone https://github.com/UCL-INGI/INGInious-containers ${CONTAINERS}
          
      # Get APT dependencies
      # TODO: see https://github.com/actions/cache/issues/324
      - name: "[TMP] Chown APT cache"
        if: steps.cache-apt.outputs.cache-hit != 'true'
        run: sudo chown ${USER}:${USER} -R /var/cache/apt
      
      - name: Cache APT
        id: cache-apt
        uses: actions/cache@v3
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt

      # TODO: see https://github.com/actions/cache/issues/324
      - name: Install APT dependencies
        if: steps.cache-apt.outputs.cache-hit != 'true'
        run: |
          sudo apt-get install -y libtidy5deb1 libzmq3-dev
          sudo chown ${USER}:${USER} -R /var/cache/apt

      # Get PIP dependencies
      - name: Cache PIP
        id: cache-pip
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.local/lib/python3.8
          key: ${{ runner.os }}-pip

      - name: Install PIP dependencies and INGInious
        if: steps.cache-pip.outputs.cache-hit != 'true'
        run: |
          pip3 install --user nose==1.3.7 selenium==3.141.0 coverage pyvirtualdisplay pytest 
          pip3 install --user ${INGINIOUS}
          pip3 install --upgrade ${PLUGIN_URLS}
          pip3 install --user --upgrade markupsafe==2.0.1
          
      - name: Start services
        run: |
          sudo systemctl start mongod
          sudo systemctl start docker
      
      - name: "[TMP] Get default installer patch"
        if: steps.cache-inginious.outputs.cache-hit != 'true'
        run: git -C ${INGINIOUS} checkout default_installer

      - name: Install INGInious
        if: steps.cache-inginious.outputs.cache-hit != 'true'
        run: |
          cd ${INGINIOUS}
          ./inginious-install --default True
          
      - name: Add current repo in course list
        run: ln -s ${GITHUB_WORKSPACE} ${INGINIOUS}/tasks/${REPO_NAME}
      
      - name: "[TMP] Get task tester patch"
        if: steps.cache-inginious.outputs.cache-hit != 'true'
        run:  git -C ${INGINIOUS} checkout task_test
        
      # Build INGInious containers
      - name: Cache INGInious images
        id: cache-inginious-images
        uses: actions/cache@v3
        with:
          path: ${{ env.INGINIOUS_IMAGES }}
          key: ${{ runner.os }}-inginious-images
        
      - name: Build INGInious images
        if: steps.cache-inginious-images.outputs.cache-hit != 'true'
        run: python3 ${GITHUB_WORKSPACE}/.github/workflows/inginious-task-tester-container-builder.py
          
      - name: Load INGInious Images
        if: steps.cache-inginious-images.outputs.cache-hit == 'true'
        run: docker load --input ${INGINIOUS_IMAGES}
        
      - name: "[TMP] Get latest task tester script"
        run: |
          wget https://raw.githubusercontent.com/nrybowski/INGInious/task_test/utils/task_tester/inginious-test-task
          mv inginious-test-task ${INGINIOUS}/utils
        
      - name: Re-playing old submissions
        run: python3 ${INGINIOUS}/utils/inginious-test-task -p ${PLUGIN_NAMES} -c ${INGINIOUS}/configuration.yaml ${REPO_NAME}
